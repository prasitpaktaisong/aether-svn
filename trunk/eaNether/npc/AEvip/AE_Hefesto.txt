
vip,43,83,3	script	Mestre-Ferreiro Hefesto	404,{

// Capacidade de Refine dos equipamentos. Padrão é até +10.
set $REF_Max,10;

// Array de chances para Equipamentos:
setarray $REF_Equip[0],100,100,100,100, 60, 40, 40, 20, 20, 10;

// Array de chances para Armas Lv. 1:
setarray $REF_Weap1[0],100,100,100,100,100,100,100, 60, 40, 20;

// Array de chances para Armas Lv. 2:
setarray $REF_Weap2[0],100,100,100,100,100,100, 60, 40, 20, 20;

// Array de chances para Armas Lv. 3:
setarray $REF_Weap3[0],100,100,100,100,100, 60, 50, 20, 20, 20;

// Array de chances para Armas Lv. 4:
setarray $REF_Weap4[0],100,100,100,100, 60, 40, 40, 20, 20, 10;

// Array dos IDs dos itens necessários para cada nível.
// Modelo: Armadura, Armas Lvl 1, Lvl 2, Lvl 3, Lvl 4, Zenys.
setarray $REF_Itens[0],985,1010,1011,984,984,2000;

// Nível de GM para usar.
set $REF_GM,1;

// Nome do NPC.
set @n$,"^0000FF[Hefesto]^000000";

mes @n$;
mes "Olá, jovem aventureir" + ((Sex)?"o":"a") + "!";
mes "Em que posso te ajudar?";
switch(select("• Refinar Equipamentos","• Reparar Equipamentos","• Comprar Materiais","• Trocar Minérios","• Cancelar")){
	case 1:
		callfunc "Refine_Check";
	
		next;	
		mes @n$;
		mes "Isso custará "+(($REF_Itens[5]) ? "^000000^0000FF" + $REF_Itens[5] + "^000000z e mais:" : "^000000");
		mes "• Equipamentos:^0000FF " + (($REF_Itens[0]) ? "1^000000 × ^0000FF" + getitemname($REF_Itens[0]) : "Nada^000000");
		mes "^000000• Armas Nível 1:^0000FF " + (($REF_Itens[1]) ? "1^000000 × ^0000FF" + getitemname($REF_Itens[1]) : "Nada^000000");
		mes "^000000• Armas Nível 2:^0000FF " + (($REF_Itens[2]) ? "1^000000 × ^0000FF" + getitemname($REF_Itens[2]) : "Nada^000000");
		mes "^000000• Armas Nível 3:^0000FF " + (($REF_Itens[3]) ? "1^000000 × ^0000FF" + getitemname($REF_Itens[3]) : "Nada^000000");
		mes "^000000• Armas Nível 4:^0000FF " + (($REF_Itens[4]) ? "1^000000 × ^0000FF" + getitemname($REF_Itens[4]) : "Nada^000000");
	
		RefineMenu:
		set .@eq,select(callfunc("Refine_Check"));
		next;
		mes @n$;
	
		while(1){
			if(!getequipisequiped(.@eq)) callfunc "Refine_Error",1;
			if(!getequipisenableref(.@eq)) callfunc "Refine_Error",2;
			if(!getequipisidentify(.@eq)) callfunc "Refine_Error",3;
			if(getequiprefinerycnt(.@eq) >= $REF_Max) callfunc "Refine_Error",4;
			if(!countitem($REF_Itens[getequipweaponlv(.@eq)]) || Zeny < $REF_Itens[5]) callfunc "Refine_Error",5;
			mes "Muito bem, o que";
			mes "deseja fazer?";
			set .@cont,callfunc ("Refine_While",select(((.@cont)?((getequippercentrefinery(.@eq) == 100)?"":"• Continuar refinando."):((getequippercentrefinery(.@eq) == 100)?"":"• Refinar")),((getequippercentrefinery(.@eq) == 100)?"• Refinar até o Nível Seguro.":""),"• Cancelar."),getequipweaponlv(.@eq),.@eq);
				if(.@count) CallSub "RefineMenu";
		}
			close;
		
	case 2:
		next;
		mes @n$;
		mes "Isso custará ^0000FF10^000000.^0000FF000^000000z, deseja prosseguir?";
		switch(select("• Sim","• Não")){
		case 1:
			next;
			mes @n$;
			
			if(zeny < 10000){
				mes "Você não tem Zenys o suficiente.";
				close;
			}	
			getinventorylist;
			if (getbrokenid(1)!=NULL){ 
				set Zeny, Zeny - 10000;
				atcommand "@repairall";
			
				mes "Conserto feito com perfeição!";
				close;
			}
			mes "Você não precisa de nenhum conserto.";
			close;	
		case 2:
			close;
		}
	
	case 3:
		next;
		mes @n$;
		mes "O que você procura?";
		switch(select("• Bigornas","• Itens de Forja","• Metais","• Cancelar")){
			case 1:
				next;
				mes @n$;
				mes "Que tipo gostaria de adquirir?";
				switch(select("• Bigorna - ^0000FF30,000^000000z","• Bigorna de Oridecon - ^0000FF120,000^000000z","• Bigorna de Ouro - ^0000FF300,000^000000z","• Cancelar")){
					case 1:
						next;
						mes @n$;
						if(Zeny < 30000){
							mes "Você não tem Zenys o suficiente";
							close;
						}
						getitem 986,1;
						set Zeny, zeny - 30000;
						mes "Aqui está.";
						close;
						
					case 2:
						next;
						mes @n$;
						if(Zeny < 120000){
							mes "Você não tem Zenys o suficiente";
							close;
						}
						getitem 987,1;
						set Zeny, zeny - 120000;
						mes "Aqui está.";
						close;
	
					case 3:
						next;
						mes @n$;
						if(Zeny < 300000){
							mes "Você não tem Zenys o suficiente";
							close;
						}
						getitem 988,1;
						set Zeny, zeny - 300000;						
						mes "Aqui está.";
						close;
						
					case 4:
						close;
				}
			case 2:
				next;
				mes @n$;
				mes "Que tipo gostaria de adquirir?";
				switch(select("• Mini Fornalha - ^0000FF150^000000z","• Martelo de Ferro - ^0000FF1000^000000z","• Martelo de Ouro - ^0000FF3000^000000z","• Martelo de Oridecon - ^0000FF5000^000000z","• Cancelar")){
					case 1:
						next;
						mes @n$;
						mes "Lembrando que você precisa não estar sobrecarregado em relação ao peso que carrega, qual quantidade gostaria?";
						input @qt;
						
						next;
						mes @n$;
						if(Zeny < (@qt*150)){
							mes "Você não tem Zenys o suficiente";
							close;
						}
						getitem 612,@qt;
						set Zeny, zeny - 150*@qt;
						mes "Aqui está.";
						close;
						
					case 2:
						next;
						mes @n$;
						mes "Lembrando que você precisa não estar sobrecarregado em relação ao peso que carrega, qual quantidade gostaria?";
						input @qt;
						
						next;
						mes @n$;
						if(Zeny < (@qt*1000)){
							mes "Você não tem Zenys o suficiente";
							close;
						}
						getitem 613,@qt;
						set Zeny, zeny - 1000*@qt;						
						mes "Aqui está.";
						close;
	
					case 3:
						next;
						mes @n$;
						mes "Lembrando que você precisa não estar sobrecarregado em relação ao peso que carrega, qual quantidade gostaria?";
						input @qt;
						
						next;
						mes @n$;
						if(Zeny < (@qt*3000)){
							mes "Você não tem Zenys o suficiente";
							close;
						}
						getitem 614,@qt;
						set Zeny, zeny - 3000*@qt;
						mes "Aqui está.";
						close;
	
					case 4:
						next;
						mes @n$;
						mes "Lembrando que você precisa não estar sobrecarregado em relação ao peso que carrega, qual quantidade gostaria?";
						input @qt;
						
						next;
						mes @n$;
						if(Zeny < (@qt*5000)){
							mes "Você não tem Zenys o suficiente";
							close;
						}
						getitem 615,@qt;
						set Zeny, zeny - 5000*@qt;						
						mes "Aqui está.";
						close;
					
					case 5:
						close;
				}
			case 3:
				next;
				mes @n$;
				mes "Que tipo gostaria de adquirir?";		
				switch(select("• Fracon","• Emveretarcon","• Cancelar")){
					case 1:
						next;
						mes @n$;
						mes "Lembrando que você precisa não estar sobrecarregado em relação ao peso que carrega, qual quantidade gostaria?";
						input @qt;
						
						next;
						mes @n$;
						if(Zeny < (@qt*200)){
							mes "Você não tem Zenys o suficiente";
							close;
						}
						getitem 1010,@qt;
						set Zeny, zeny - 200*@qt;						
						mes "Aqui está.";
						close;
						
					case 2:
						next;
						mes @n$;
						mes "Lembrando que você precisa não estar sobrecarregado em relação ao peso que carrega, qual quantidade gostaria?";
						input @qt;
						
						next;
						mes @n$;
						if(Zeny < (@qt*1000)){
							mes "Você não tem Zenys o suficiente";
							close;
						}
						getitem 1011,@qt;
						set Zeny, zeny - 1000*@qt;
						mes "Aqui está.";
						close;
						
					case 3:
						close;
				}
			case 4:
				close;
		}	
				
	case 4:
		next;
		mes @n$;		
		mes "Para cada ^0000FF5 Minérios^000000 que você tiver, eu purificarei para uma ^0000FFPedra Fundamental^000000, o que deseja trocar?";
		switch(select("• Purificar Oridecon","• Purificar Elunium","• Cancelar")){
			case 1:
				set @qt2,countitem(756);
				if(@qt2 < 5){
					next;
					mes @n$;
					mes "Você não tem o mínimo de ^0000FFMinérios^000000 para uma purificação.";
					close;
				}
				set @qt, @qt2-(@qt2%5);
				delitem 756,@qt;
				getitem 984,@qt/5;
				mes "Purificação concluída.";
				close;
			
			case 2:			
				set @qt2,countitem(757);
				if(@qt2 < 5){
					next;
					mes @n$;
					mes "Você não tem o mínimo de ^0000FFMinérios^000000 para uma purificação.";
					close;
				}
				set @qt, @qt2-(@qt2%5);
				delitem 757,@qt;
				getitem 985,@qt/5;
				mes "Purificação concluída.";
				close;
		}
	case 5:
		close;
	}
}

function	script	Refine_Check	{
	if(getgmlevel() < $REF_GM) {
		mes "Desculpe mas não posso ajudá-l" + ((Sex)?"o":"a") + ".";
    	close;
    }

	for(set .@n,1; .@n < 10; set .@n,.@n + 1) {
		if(getequipisequiped(.@n) && getequipisenableref(.@n))
		set .@menu$,.@menu$ + "• " + getequipname(.@n);
        set .@menu$,.@menu$ + ":";
	}

	if(.@menu$ == ":::::::::") {
		mes "Você não tem nada equipado que eu possa refinar.";
        close;
	}
return .@menu$;
}

function	script	Refine_Error	{
	switch(getarg(0)) {
	case 1: mes ("O equipamento escolhido não está mais equipado."); close;
	case 2: mes ("Não posso trabalhar com o equipamento escolhido."); close;
	case 3: mes ("O equipamento escolhido não está identificado."); close;
	case 4: mes ("O equipamento escolhido já está refinado ao máximo."); close;
	case 5: mes ("Você não possui Zeny ou os materiais necessários para refinar."); close;
	}
}
	
function	script	Refine_While	{

	switch(getarg(0)) {
	case 1:
	delitem ($REF_Itens[getequipweaponlv(getarg(2))]),1;
    set Zeny, Zeny - $REF_Itens[5];
		if(rand(100) <= getd("$REF_"+((getarg(1) > 0)?"Weap"+getarg(1):"Equip")+"[ " + getequiprefinerycnt(getarg(2)) + "]")) {
		successrefitem(getarg(2));
		mes "Perfeito! Estou feliz em saber que minhas habilidades ainda não enferrujaram.!";
		} else {
		failedrefitem(getarg(2));
		mes "Oh não! O procedimento falhou. Sabia que não devia ter martelado com tanta força...";
        return 1;
		}
	break;

	case 2:
		while(getd("$REF_"+((getarg(1) > 0)?"Weap"+getarg(1):"Equip")+"[ " + getequiprefinerycnt(getarg(2)) + "]") == 100) {
		delitem ($REF_Itens[getequipweaponlv(getarg(2))]),1;
        set Zeny, Zeny - $REF_Itens[5];
		successrefitem(getarg(2));
            if(!countitem($REF_Itens[getequipweaponlv(getarg(2))]) || Zeny < $REF_Itens[5]) {
				mes "Hehe.. Parece que os seus";
				mes "materiais acabaram...";
				return;
			}
		}
		mes "Tudo certo! Seu equipamento foi refinado até o nível de segurança!";
		break;

	case 3:
	close;
	}

next;
mes @n$;
return 1;
}