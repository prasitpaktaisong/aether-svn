//== Aether Script ========================================
// • Biblioteca de Sintaxes VIP
//== Autores ==============================================
// • Rafael Perella (Cronus Emulator)
//== Versão ===============================================
// • 1.0 - Rafael Perella (Criação)
// • 1.5 - Hyero (Adaptação Aether)
//== Descrição: ===========================================
// • Biblioteca de instâncias para o funcionamento de contas VIP.
//=========================================================

// -------- CASH --------
// ==============================================
function	script	getCash	{
	Query_SQL "SELECT `value` FROM `global_reg_value` WHERE `str`='"+ GetArg (1, "#CASHPOINTS") +"' AND `account_id`='"+ GetArg (0) +"'", .@Value;
	Return .@Value;
}

function	script	setCash	{
	If (IsLoggedIn (Set (.@TAID, GetArg (0)))) {
		Set .@AID, GetCharID (3);
		If (AttachRID (.@TAID))
			Set #CASHPOINTS, GetArg (1);
		AttachRID .@AID;
	}
	If (GetArg (1) <= 0)
		Query_SQL "DELETE FROM `global_reg_value` WHERE `str`='"+ GetArg (2, "#CASHPOINTS") +"' AND `account_id`='"+ GetArg (0) +"'";
	Else If (! CallFunc ("getCash", GetArg (0)))
		Query_SQL "INSERT INTO `global_reg_value` (`account_id`, `str`, `type`, `value`) VALUES ('"+ GetArg (0) +"', '"+ GetArg (2, "#CASHPOINTS") +"', '2', '"+ GetArg (1) +"')";
	Else
		Query_SQL "UPDATE `global_reg_value` SET `value`='"+ GetArg (1) +"' WHERE `str`='"+ GetArg (2, "#CASHPOINTS") +"' AND `account_id`='"+ GetArg (0) +"'";
	Return;
}

function	script	addCash	{
	CallFunc ("setCash", GetArg (0), CallFunc ("getCash", GetArg (0), GetArg (2, "#CASHPOINTS")) + GetArg (1), GetArg (2, "#CASHPOINTS"));
	Return;
}

function	script	removeCash	{
	CallFunc ("setCash", GetArg (0), CallFunc ("getCash", GetArg (0), GetArg (2, "#CASHPOINTS")) - GetArg (1), GetArg (2, "#CASHPOINTS"));
	Return;
}

// -------- VIP --------
// ==============================================
function	script	getVip	{
	Query_SQL "SELECT `value` FROM `global_reg_value` WHERE `str`='#VIPSECONDS' AND `account_id`='"+ GetArg (0) +"'", .@Value;
	If (.@Value <= CallFunc ("now")) {
		Query_SQL "DELETE FROM `global_reg_value` WHERE `str`='#VIPSECONDS' AND `account_id`='"+ GetArg (0) +"'";
		Return 0;
	}
	Return .@Value;
}

function	script	setVip	{
	If (IsLoggedIn (Set (.@TAID, GetArg (0)))) {
		Set .@AID, GetCharID (3);
		If (AttachRID (.@TAID))
			Set #VIPSECONDS, GetArg (1);
		AttachRID .@AID;
	}
	If (! CallFunc ("getVip", .@TAID))
		Query_SQL "INSERT INTO `global_reg_value` (`account_id`, `str`, `type`, `value`) VALUES ('"+ .@TAID +"', '#VIPSECONDS', '2', '"+ GetArg (1) +"')";
	Else
		Query_SQL "UPDATE `global_reg_value` SET `value`='"+ GetArg (1) +"' WHERE `str`='#VIPSECONDS' AND `account_id`='"+ .@TAID +"'";
	Return;
}

function	script	addVip	{
	Set .@VipSeconds, CallFunc ("getVip", GetArg (0));
	CallFunc ("setVip", GetArg (0), (! .@VipSeconds) ? (CallFunc ("now") + (GetArg (1) * 60 * 60)) : (.@VipSeconds + (GetArg (1) * 60 * 60)));
	Return;
}

function	script	removeVip	{
	CallFunc ("setVip", GetArg (0), CallFunc ("getVip", GetArg (0)) - (GetArg (1) * 60 * 60));
	Return;
}

function	script	activateVip	{
	If (! GetArg (2, 1) || CallFunc ("getVip", CallFunc ("char2aid", GetArg (0))))
		Set .@level, GetArg (1, 1);
	If (GetArg (3, 0))
		Query_SQL "UPDATE `login` SET `level`='"+ .@level +"' WHERE `account_id`='"+ CallFunc ("char2aid", GetArg (0)) +"'";
	If (GetArg (4, 1) && IsLoggedIn (CallFunc ("char2aid", GetArg (0))))
		AtCommand "@adjgmlvl "+ .@level +" "+ GetArg (0);
	Return;
}

function	script	clearVipTrash	{
	Query_SQL "DELETE FROM `global_reg_value` WHERE `value`<='"+ CallFunc ("now") +"' AND `str`='#VIPSECONDS'";
	Return;
}

// -------- TEMPO E DATA --------
// ==============================================
function	script	today	{
	Return CallFunc ("date2sec", GetTime (7), GetTime (6), GetTime (5), 0, 0, 0);
}

function	script	now	{
	Return CallFunc ("date2sec", GetTime (7), GetTime (6), GetTime (5), GetTime (3), GetTime (2), GetTime (1));
}

function	script	time	{
	Return CallFunc ("date2sec", 2000, 0, 0, GetTime (3), GetTime (2), GetTime (1));
}

function	script	date2sec	{
	Return ((GetArg(0)-2000)*31536000) + (GetArg(1)*2592000) + (GetArg(2)*86400) + (GetArg(3)*3600) + (GetArg(4)*60) + GetArg(5);
}

function	script	sec2date	{
	Set .@scope$, GetArg (1, "@");
	SetArray .@varNames$, "year", "month", "day", "hour", "minute", "second";
	SetArray .@div, 31536000, 2592000, 86400, 3600, 60, 1;
	Set .@seconds, GetArg (0);

	For (Set .@i, 0; .@i < 6; Set .@i, .@i + 1) {
		SetD .@scope$ + .@varNames$[.@i], (.@seconds - (.@seconds % .@div[.@i])) / .@div[.@i];
		Set .@seconds, .@seconds % .@div[.@i];
	}
	SetD .@scope$ + .@varNames$, GetD (.@scope$ + .@varNames$) + 2000;
	Return;
}

// -------- CONVERSÃO DE IDENTIFICADORES --------
// ==============================================
function	script	userExists	{
	Query_SQL "SELECT COUNT(*) FROM `login` WHERE `userid`='"+ GetArg (0) +"'", .@NumRows;
	Return .@NumRows;
}

function	script	aidExists	{
	Query_SQL "SELECT COUNT(*) FROM `login` WHERE `account_id`='"+ GetArg (0) +"'", .@NumRows;
	Return .@NumRows;
}

function	script	charExists	{
	Query_SQL "SELECT COUNT(*) FROM `char` WHERE `name`='"+ GetArg (0) +"'", .@NumRows;
	Return .@NumRows;
}

function	script	user2aid	{
	Query_SQL "SELECT `account_id` FROM `login` WHERE `userid`='"+ GetArg (0) +"'", .@AID;
	Return .@AID;
}

function	script	aid2user	{
	Query_SQL "SELECT `userid` FROM `login` WHERE `account_id`='"+ GetArg (0) +"'", .@UserName$;
	Return .@UserName$;
}

function	script	char2aid	{
	Query_SQL "SELECT `account_id` FROM `char` WHERE `name`='"+ GetArg (0) +"'", .@AID;
	Return .@AID;
}

function	script	aid2char	{
	Query_SQL "SELECT `name` FROM `char` WHERE `account_id`='"+ GetArg (0) +"'", .@Name$;
	Return .@Name$;
}

function	script	aid2loggedinChar	{
	Query_SQL "SELECT `name` FROM `char` WHERE `online`='1' AND `account_id`='"+ GetArg (0) +"'", .@Name$;
	If (.@Name$ == "" && GetArg (1, 1)) Return CallFunc ("aid2char", GetArg (0));
	Return .@Name$;
}