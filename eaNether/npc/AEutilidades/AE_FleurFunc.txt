function	script	FuncFleur	{

//• Recebimento de Argumentos
	set @nome$,getarg(0);
	set @mapa$,getarg(1);
	set @mapax,getarg(2);
	set @mapay,getarg(3);

	cutin "kh_ellisia",2;
	mes "^FF0000["+@nome$+"]^000000";
	mes "Saudações, "+((Sex)?"^0000FF":"^FF0000")+strcharinfo(0)+"^000000.";
	if(getpvpmode()){
		mes "Infelizmente, enquanto estiver no ^0000FFModo PvP^000000, não será possível utilizar meus serviços.";
		mes "Obrigada pela compreensão.";
		close2;
		cutin "",255;
		end;
	}
	heal MaxHp,0;
	set @SpAtual, MaxSp - Sp;
	switch(select("• Cancelar","• Cura de SP (^0000FF"+(@SpAtual)+"^000000z)","• Serviços de Teleporte","• Serviços de Armazém","• Serviços de Aluguel","• Salvar Ponto de Retorno")){
		case 1:
			close2;
			cutin "",255;
			end;
		
		case 2:
			set @SpAtual, MaxSp - Sp;
			if(@SpAtual == 0) {
				mes "Seu SP ja está totalmente recuperado.";
				close2;
				cutin "",255;
				end;
			}
			if(Zeny < @SpAtual){
				mes "Desculpe, você não possui ^0000FF"+@SpAtual+"^000000z";
				close2;
				cutin "",255;
				end;
			}
			set Zeny, Zeny - @SpAtual;
			heal MaxHp,@SpAtual;
			specialeffect2 7;
			mes "Seu  ^0000FFSP^000000 foi recuperado totalmente.";
			mes "Volte sempre!";
			close2;
			cutin "",255;
			end;

		case 3:	
FTeleporte:
			mes "Escolha o Serviço de ^0000FFTeleporte^000000 desejado.";
			switch(select("• Teleporte Recente - ^0000FF"+TeleRecente$+"^000000","• Teleporte à Cidades","• Teleporte à Calabouços","• Cancelar")){
				case 1:
					if(TeleRecente$ == ""){
						next;
						mes "^FF0000["+@nome$+"]^000000";
						mes "Você ainda não usou nosso ^0000FFServiço de Teleporte^000000";
						cutin "",255;
						close;
					}
					warp TeleMapa$,TeleX,TeleY;
					end;
					
				case 2:
					mes "Escolha a ^0000FFCidade^000000 desejada.";
					set @menuteleport, select(
						"• Voltar",
						"• Prontera (^0000FF"+(getmapusers("prontera")+getmapusers("prt_castle")+getmapusers("prt_church")+getmapusers("prt_in"))+"^000000)",
						"• Alberta (^0000FF"+(getmapusers("alberta")+getmapusers("alberta_in"))+"^000000)",
						"• Al De Baran (^0000FF"+(getmapusers("aldebaran")+getmapusers("aldeba_in"))+"^000000)",
						"• Amatsu (^0000FF"+(getmapusers("amatsu")+getmapusers("ama_in01")+getmapusers("ama_in02"))+"^000000)",
						"• Ayothaya (^0000FF"+(getmapusers("ayothaya")+getmapusers("ayo_in01")+getmapusers("ayo_in02"))+"^000000)",
						"• Brasilis (^0000FF"+(getmapusers("brasilis")+getmapusers("bra_dun01")+getmapusers("bra_dun02"))+"^000000)",
						"• Comodo (^0000FF"+(getmapusers("comodo")+getmapusers("cmd_in01")+getmapusers("cmd_in02"))+"^000000)",
						"• Einbech (^0000FF"+(getmapusers("einbech"))+"^000000)",
						"• Einbroch (^0000FF"+(getmapusers("einbroch")+getmapusers("ein_in01"))+"^000000)",
						"• Fenda Dimensional (^0000FF"+(getmapusers("mid_camp"))+"^000000)",
						"• Geffen (^0000FF"+(getmapusers("geffen")+getmapusers("geffen_in")+getmapusers("gef_tower"))+"^000000)",
						"• Gon Ryun (^0000FF"+(getmapusers("gonryun")+getmapusers("gon_in"))+"^000000)",
						"• Hugel (^0000FF"+(getmapusers("hugel")+getmapusers("hu_in01"))+"^000000)",
						"• Izlude (^0000FF"+(getmapusers("izlude")+getmapusers("izlude_in"))+"^000000)",
						"• Jawaii (^0000FF"+(getmapusers("jawaii")+getmapusers("jawaii_in"))+"^000000)",
						"• LightHalzen (^0000FF"+(getmapusers("lighthalzen")+getmapusers("lhz_in01")+getmapusers("lhz_in02")+getmapusers("lhz_in03"))+"^000000)",
						"• Lou Yang (^0000FF"+(getmapusers("louyang")+getmapusers("lou_in01")+getmapusers("lou_in02"))+"^000000)",
						"• Lutie (^0000FF"+(getmapusers("xmas")+getmapusers("xmas_in"))+"^000000)",
						"• Morroc (^0000FF"+(getmapusers("morocc")+getmapusers("morocc_in")+getmapusers("moc_castle"))+"^000000)",
						"• Moscóvia (^0000FF"+(getmapusers("moscovia")+getmapusers("mosk_dun01")+getmapusers("mosk_dun02")+getmapusers("mosk_dun03"))+"^000000)",
						"• Nameless (^0000FF"+(getmapusers("nameless_i")+getmapusers("abbey01")+getmapusers("abbey02")+getmapusers("abbey03"))+"^000000)",
						"• Niflheim (^0000FF"+(getmapusers("niflheim")+getmapusers("nif_in"))+"^000000)",
						"• Payon (^0000FF"+(getmapusers("payon")+getmapusers("payon_in01")+getmapusers("payon_in02"))+"^000000)",
						"• Rachel (^0000FF"+(getmapusers("rachel")+getmapusers("ra_in01")+getmapusers("ra_temple")+getmapusers("ra_temin")+getmapusers("ra_temsky")+getmapusers("que_rachel"))+"^000000)",
						"• Umbala (^0000FF"+(getmapusers("umbala")+getmapusers("um_in"))+"^000000)",
						"• Veins (^0000FF"+(getmapusers("veins")+getmapusers("thor_v01")+getmapusers("thor_v02")+getmapusers("thor_v03"))+"^000000)",
						"• Yuno (^0000FF"+(getmapusers("yuno")+getmapusers("yuno_in01")+getmapusers("yuno_in02")+getmapusers("yuno_in03")+getmapusers("yuno_in04")+getmapusers("yuno_in05"))+"^000000)",
						"• Zorya (^0000FF"+(getmapusers("zorya"))+"^000000)");
					setarray @TeleRecente$[2],"Prontera","Alberta","Al De Baran","Amatsu","Ayothaya","Brasilis","Comodo","Einbech","Einbroch","Fenda Dimensional","Geffen","Gon Ryun","Hugel","Izlude","Jawaii","LightHalzen","Lou Yang","Lutie","Morroc","Moscóvia","Nameless","Nifleheim","Payon","Rachel","Umbala","Veins","Yuno","Zorya";
					setarray @TeleMapa$[2],"prontera","alberta","aldebaran","amatsu","ayothaya","brasilis","comodo","einbech","einbroch","mid_camp","geffen","gonryun","hugel","izlude","jawaii","lighthalzen","louyang","xmas","morocc","moscovia","nameless_i","niflheim","payon","rachel","umbala","veins","yuno","zorya";
					setarray @TeleX[2], 156,117,140,104,202,195,189,137,64,209,120,160,95,127,214,158,218,148,162,221,213,194,159,137,88,214,158,187;
					setarray @TeleY[2], 175,56,121,148,174,220,150,220,199,288,66,180,105,97,223,92,118,133,91,225,185,185,181,133,153,125,77,167;
					if(@menuteleport == 1){
						goto FTeleporte;
					}
					if(@menuteleport == 11 && ep13_ryu < 100){
						next;
						mes "^FF0000["+@nome$+"]^000000";
						mes "Você não tem permissão para ir à Fenda Dimensional.";
						cutin "",255;
						close;	
					}
					set TeleRecente$, @TeleRecente$[@menuteleport];
					set TeleMapa$, @TeleMapa$[@menuteleport];
					set TeleX, @TeleX[@menuteleport];
					set TeleY, @TeleY[@menuteleport];
					warp @TeleMapa$[@menuteleport],@TeleX[@menuteleport],@TeleY[@menuteleport];
					end;
				
				
				
				case 3:
FTeleDungeon:		
					mes "Escolha o ^0000FFCalabouço^000000 desejada.";
					set @menuteleport, select(
							"• Voltar",
						"• Labirinto do Santuário de Ayothaya (^0000FF"+(getmapusers("ayo_fild02")+getmapusers("ayo_dun01")+getmapusers("ayo_dun02"))+"^000000)",
						"• Abadia de Nameless (^0000FF"+(getmapusers("abbey01")+getmapusers("abbey02"))+"^000000)",
						"• Calabouço de Geffen (^0000FF"+(getmapusers("gef_tower")+getmapusers("gef_dun00")+getmapusers("gef_dun01")+getmapusers("gef_dun02"))+"^000000)",
						"• Caverna de Magma(^0000FF"+(getmapusers("yuno_fild03")+getmapusers("mag_dun01")+getmapusers("mag_dun02"))+"^000000)",
						"• Caverna dos Orcs (^0000FF"+(getmapusers("gef_fild10")+getmapusers("orcsdun01")+getmapusers("orcsdun02"))+"^000000)",
						"• Caverna de Gelo (^0000FF"+(getmapusers("ra_fild01")+getmapusers("ice_dun01")+getmapusers("ice_dun02")+getmapusers("ice_dun03"))+"^000000)",
						"• Floresta Encantada de Moscóvia (^0000FF"+(getmapusers("mosk_fild02")+getmapusers("mosk_dun01")+getmapusers("mosk_fild02")+getmapusers("mosk_dun03"))+"^000000)",
						"• Caverna dos Arqueiros de Payon (^0000FF"+(getmapusers("pay_arche")+getmapusers("pay_dun00")+getmapusers("pay_dun01")+getmapusers("pay_dun02")+getmapusers("pay_dun03")+getmapusers("pay_dun04"))+"^000000)",
						"• Vulcão de Thor(^0000FF"+(getmapusers("ve_fild03")+getmapusers("thor_v01")+getmapusers("thor_v02")+getmapusers("thor_v03"))+"^000000)",
						"• Cavernas de Comodo (^0000FF"+(getmapusers("beach_dun")+getmapusers("beach_dun2")+getmapusers("beach_dun3"))+"^000000)",
						"• Depósito da Fábrica de Brinquedos (^0000FF"+(getmapusers("xmas_dun01")+getmapusers("xmas_dun02"))+"^000000)",
						"• Esgoto de Prontera (^0000FF"+(getmapusers("prt_fild05")+getmapusers("prt_sewb1")+getmapusers("prt_sewb2")+getmapusers("prt_sewb3")+getmapusers("prt_sewb4"))+"^000000)",
						"• Esfinge (^0000FF"+(getmapusers("moc_fild19")+getmapusers("in_sphinx1")+getmapusers("in_sphinx2")+getmapusers("in_sphinx3")+getmapusers("in_sphinx4")+getmapusers("in_sphinx5"))+"^000000)",
						"• Fábrica de Bonecas de Kiehl (^0000FF"+(getmapusers("yuno_fild08")+getmapusers("kh_dun01")+getmapusers("kh_dun02"))+"^000000)",
						"• Formigueiro Infernal (^0000FF"+(getmapusers("cmd_fild08")+getmapusers("anthell01")+getmapusers("anthell02"))+"^000000)",
						"• Glast Heim (^0000FF"+(getmapusers("gl_church")+getmapusers("gl_cas01")+getmapusers("gl_cas02")+getmapusers("gl_step")+getmapusers("gl_knt01"))+"^000000)",
						"• Ilha da Tartaruga (^0000FF"+(getmapusers("tur_dun01")+getmapusers("tur_dun02")+getmapusers("tur_dun03")+getmapusers("tur_dun04"))+"^000000)",
						"• Juperos (^0000FF"+(getmapusers("jupe_cave")+getmapusers("juperos_01")+getmapusers("juperos_02")+getmapusers("jupe_core"))+"^000000)",
						"• Labirinto da Floresta (^0000FF"+(getmapusers("prt_maze01")+getmapusers("prt_maze02")+getmapusers("prt_maze03"))+"^000000)",
						"• Labirinto de Tatame (^0000FF"+(getmapusers("ama_dun01")+getmapusers("ama_dun02")+getmapusers("ama_dun03"))+"^000000)",
						"• Laboratórios de Somatologia (^0000FF"+(getmapusers("lhz_dun01")+getmapusers("lhz_dun02")+getmapusers("lhz_dun03"))+"^000000)",
						"• Lago do Abismo (^0000FF"+(getmapusers("hu_fild05")+getmapusers("abyss_01")+getmapusers("abyss_02")+getmapusers("abyss_03"))+"^000000)",
						"• Loja de Carpintaria (^0000FF"+(getmapusers("um_dun01")+getmapusers("um_dun02"))+"^000000)",
						"• Mina Abandonada de Mjolnir (^0000FF"+(getmapusers("mjo_dun01")+getmapusers("mjo_dun02")+getmapusers("mjo_dun03"))+"^000000)",
						"• Mina de Einbroch (^0000FF"+(getmapusers("ein_dun01")+getmapusers("ein_dun02"))+"^000000)",
						"• Navio Fantasma (^0000FF"+(getmapusers("treasure01")+getmapusers("treasure02"))+"^000000)",
						"• Pirâmide (^0000FF"+(getmapusers("moc_pryd01")+getmapusers("moc_pryd02")+getmapusers("moc_pryd03")+getmapusers("moc_pryd04")+getmapusers("moc_pryd05")+getmapusers("moc_pryd06"))+"^000000)",
						"• Santuário de Xi Wang Mu (^0000FF"+(getmapusers("gon_dun01")+getmapusers("gon_dun02")+getmapusers("gon_dun03"))+"^000000)",
						"• Templo de Odin (^0000FF"+(getmapusers("odin_tem01")+getmapusers("odin_tem02")+getmapusers("odin_tem03"))+"^000000)",
						"• Templo de Rachel (^0000FF"+(getmapusers("ra_san01")+getmapusers("ra_san02")+getmapusers("ra_san03")+getmapusers("ra_san04")+getmapusers("ra_san05"))+"^000000)",
						"• Torre de Thanatos (^0000FF"+(getmapusers("tha_t01")+getmapusers("tha_t02")+getmapusers("tha_t03")+getmapusers("tha_t04")+getmapusers("tha_t05")+getmapusers("tha_t06")+getmapusers("tha_t07")+getmapusers("tha_t08")+getmapusers("tha_t09")+getmapusers("tha_t10")+getmapusers("tha_t11")+getmapusers("tha_t12"))+"^000000)",
						"• Torre do Relógio (^0000FF"+(getmapusers("c_tower1")+getmapusers("c_tower2")+getmapusers("c_tower3")+getmapusers("c_tower4")+getmapusers("alde_dun01")+getmapusers("alde_dun02")+getmapusers("alde_dun03")+getmapusers("alde_dun04"))+"^000000)",
						"• Tumba Real de Lou Yang (^0000FF"+(getmapusers("lou_dun01")+getmapusers("lou_dun02")+getmapusers("lou_dun03"))+"^000000)",
						"• Túnel Submarino (^0000FF"+(getmapusers("iz_dun00")+getmapusers("iz_dun01")+getmapusers("iz_dun02")+getmapusers("iz_dun03")+getmapusers("iz_dun04"))+"^000000)");
					setarray @TeleRecente$[2],"Labirinto de Ayothaya","Abadia de Nameless","Calabouço de Geffen","Caverna de Magma","Caverna dos Orcs","Caverna de Gelo","Floresta de Moscóvia","Caverna de Payon","Vulcão de Thor","Caverna de Comodo","Fábrica de Brinquedos","Esgoto de Prontera","Esfinge","Fábrica de Kiehl","Formigueiro Infernal","Glast Heim","Ilha da Tartaruga","Juperos","Labirinto da Floresta","Labirinto de Tatame","Laboratório de Somatologia","Lago do Abismo","Loja de Carpintaria","Mina de Mjolnir","Mina de Einbroch","Navio Fantasma","Pirâmide","Santuário de Xi Wang Mu","Templo de Odin","Templo de Rachel","Torre de Thanatos","Torre do Relógio","Tumba de Lou Yang","Túnel Submarino";
					setarray @TeleMapa$[2],"ayo_fild02","abbey01","gef_tower","yuno_fild03","in_orcs01","ra_fild01","mosk_fild02","pay_arche","ve_fild03","comodo","xmas","prt_fild05","moc_fild19","yuno_fild08","cmd_fild08","glast_01","tur_dun01","jupe_cave","prt_fild01","ama_dun01","lighthalzen","hu_fild05","umbala","mjolnir_02","einbech","alb2trea","moc_ruins","gonryun","odin_tem01","ra_san01","tha_scene01","aldebaran","louyang","izlu2dun";
					setarray @TeleX[2],273,51,147,35,34,233,193,41,169,144,143,274,107,80,328,206,155,55,136,229,309,173,113,89,138,87,62,161,91,139,139,140,41,114;
					setarray @TeleY[2],150,13,35,135,165,319,253,133,237,305,307,208,100,179,354,136,234,52,361,11,296,308,282,358,244,103,162,195,145,19,201,130,267,84;
					if(@menuteleport == 1){
						goto FTeleporte;
					}
					if(@menuteleport == 17){
						switch(select("• Voltar","• Entrada da Igreja (^0000FF"+getmapusers("gl_church")+"^000000)","• Entrada do Castelo (^0000FF"+(getmapusers("gl_cas01")+getmapusers("gl_cas02"))+"^000000)","• Escadarias (^0000FF"+getmapusers("gl_step")+"^000000)","• Entrada da Cavalaria (^0000FF"+getmapusers("gl_knt01")+"^000000)")){
							case 1:
								goto FTeleDungeon;
								
							case 2:
								set TeleRecente$, "Glastheim - Igreja";
								set TeleMapa$, "glast_01";
								set TeleX, 206;
								set TeleY, 136;					
								warp "glast_01",206,136;
								end;
		
							case 3:
								set TeleRecente$, "Glastheim - Castelo";
								set TeleMapa$, "glast_01";
								set TeleX, 199;
								set TeleY, 346;					
								warp "glast_01",199,346;
								end;
									
							case 4:	
								set TeleRecente$, "Glastheim - Escadarias";
								set TeleMapa$, "glast_01";
								set TeleX, 68;
								set TeleY, 107;					
								warp "glast_01",68,107;
								end;
		
							case 5:
								set TeleRecente$, "Glastheim - Cavalaria";
								set TeleMapa$, "glast_01";
								set TeleX, 66;
								set TeleY, 198;					
								warp "glast_01",66,198;
								end;	
						}
					}	
					if(@menuteleport == 11){
						switch(select("• Voltar","• Mao, A Caverna do Leste (^0000FF"+getmapusers("beach_dun3")+"^000000)","• Karu, A Caverna do Oeste (^0000FF"+getmapusers("beach_dun")+"^000000)","• Ruande, A Caverna do Norte (^0000FF"+getmapusers("beach_dun3")+"^000000)")){
							case 1:
								goto FTeleDungeon;
								
							case 2:
								set TeleRecente$, "Comodo - Caverna de Mao";
								set TeleMapa$, "cmd_fild01";
								set TeleX, 35;
								set TeleY, 318;					
								warp "cmd_fild01",35,318;
								end;
							
							case 3:
								set TeleRecente$, "Comodo - Caverna de Karu";
								set TeleMapa$, "comodo";
								set TeleX, 36;
								set TeleY, 215;						
								warp "comodo",36,215;
								end;
			
							case 4:
								set TeleRecente$, "Comodo - Caverna de Ruande";
								set TeleMapa$, "comodo";
								set TeleX, 175;
								set TeleY, 346;						
								warp "comodo",175,356;
								end;
						}
					}
					set TeleRecente$, @TeleRecente$[@menuteleport];
					set TeleMapa$, @TeleMapa$[@menuteleport];
					set TeleX, @TeleX[@menuteleport];
					set TeleY, @TeleY[@menuteleport];
					warp @TeleMapa$[@menuteleport],@TeleX[@menuteleport],@TeleY[@menuteleport];
					end;
		
				case 4:
					close2;
					cutin "",255;
					end;
			}

		case 4:			
FArmazem:
			mes "Qual é o Serviço de ^0000FFArmazém^000000 desejado?";
			switch(select("• Armazém (^0000FF60^000000z)","• Armazém Especial (^0000FF80^000000z)","• Armazém de Guilda (^0000FF120^000000z)","• Cancelar")){
				case 1:
					if(basicskillcheck() > 0 && getskilllv("NV_BASIC") < 6) {
						mes "É necessário possuir as ^0000FFHabilidades Básicas^000000 em Nível ^0000FF6^000000 para utilizar este Serviço.";
						cutin "",255;
						close;
					}
					if(Zeny < 60){
						mes "São necessários ^0000FF60^000000z para a utilização deste Serviço.";
						cutin "",255;
						close;
					}
					emotion e_ok;
					set Zeny, Zeny - 60;
					mes "Volte sempre!";
					cutin "",255;
					close2;
					openstorage;
					end;
					
				case 2:
					if(basicskillcheck() > 0 && getskilllv("NV_BASIC") < 6) {
						mes "É necessário possuir as ^0000FFHabilidades Básicas^000000 em Nível ^0000FF6^000000 para utilizar este Serviço.";
						cutin "",255;
						close;
					}
					if(Zeny < 80){
						mes "São necessários ^0000FF80^000000z para a utilização deste Serviço.";
						cutin "",255;
						close;
					}
					emotion e_ok;
					set Zeny, Zeny - 80;
					mes "Volte sempre!";
					cutin "",255;
					close2;
					openrentstorage;
					end;			
					
				case 3:
					if(basicskillcheck() > 0 && getskilllv("NV_BASIC") < 6) {
						mes "É necessário possuir as ^0000FFHabilidades Básicas^000000 em Nível ^0000FF6^000000 para utilizar este Serviço.";
						cutin "",255;
						close;
					}
					if(getcharid(2) < 1){
						mes "É necessário possuir ou fazer parte de uma ^0000FFGuilda^000000 para utilizar este ^0000FFServiço^000000.";
						cutin "",255;
						close;
					}
					if(guildopenstorage() == 1){
						mes "Um membro de sua ^0000FFGuilda^000000 está utilizando este ^0000FFServiço^000000 agora, tente novamente mais tarde.";
						cutin "",255;
						close;
					}
					if(Zeny < 120){
						mes "São necessários ^0000FF120^000000z para a utilização deste Serviço.";
						cutin "",255;
						close;
					}
					emotion e_ok;
					set Zeny, Zeny - 120;
					mes "Volte sempre!";
					cutin "",255;
					close2;
					end;		
				
				case 4:
					mes "Volte sempre!";
					cutin "",255;
					close;
			}
			end;

		case 5:	
FAluguel:
			mes "Qual é o Serviço de ^0000FFAluguel^000000 desejado?";
			
			switch(select("• Alugar um Falcão (^0000FF2000^000000z)","• Alugar um Carrinho (^0000FF2000^000000z)","• Alugar um Peco Peco (^0000FF2000^000000z)","• Cancelar")){
				case 1:
					if(getskilllv("HT_FALCON")==0){
						mes "É preciso possuir a Habilidade ^0000FFAdestrar Falcão^000000 para utilizar este Serviço.";
						cutin "",255;
						close;				
					}
					if(checkfalcon()){
						mes "Você já possui um ^0000FFFalcão^000000.";
						cutin "",255;
						close;
					}
					if(Zeny < 2000){
						mes "Desculpe, ^0000FF2000^000000z são necessários para a locação.";
						cutin "",255;
						close;
					}
					set Zeny, Zeny - 2000;
					setfalcon;
					emotion e_ok;
					mes "Volte sempre!";
					cutin "",255;
					close;			
				
				case 2:
					if(getskilllv("MC_PUSHCART")==0){
						mes "É preciso possuir a Habilidade ^0000FFUsar Carrinho^000000 para utilizar este Serviço.";
						cutin "",255;
						close;				
					}
					if(checkcart()){
						mes "Você já possui um ^0000FFCarrinho^000000.";
						cutin "",255;
						close;
					}
					if(Zeny < 2000){
						mes "Desculpe, ^0000FF2000^000000z são necessários para a locação.";
						cutin "",255;
						close;
					}
					set Zeny, Zeny - 2000;
					setcart;
					emotion e_ok;
					mes "Volte sempre!";
					cutin "",255;
					close;			
				
				case 3:
					if(getskilllv("KN_RIDING")==0){
						mes "É preciso possuir a Habilidade ^0000FFMontaria^000000 para utilizar este Serviço.";
						cutin "",255;
						close;				
					}
					if(checkriding()){
						mes "Você já possui um ^0000FFPeco Peco^000000.";
						cutin "",255;
						close;
					}
					if(Zeny < 2000){
						mes "Desculpe, ^0000FF2000^000000z são necessários para a locação.";
						cutin "",255;
						close;
					}
					set Zeny, Zeny - 2000;
					setriding;
					emotion e_ok;
					mes "Volte sempre!";
					cutin "",255;
					close;		
				
				case 4:
					mes "Volte sempre!";
					cutin "",255;
					close;
			}
			end;

	case 6:
FSalvar:
		savepoint @mapa$,@mapax,@mapay;
		mes "Volte sempre!";
		cutin "",255;
		close2;
		end;		
	}	
}